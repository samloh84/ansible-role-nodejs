- set_fact:
    distribution: "{% if compile %}source{% else %}binaries{% endif %}"
    download_dir: "{{ role_path }}/files"
    tmp_dir: "{{ tmp_prefix }}/nodejs-{{ nodejs_version }}"

- set_fact:
    nodejs_dir: "{{ urls[nodejs_version][distribution].dir }}"
    nodejs_url: "{{ urls[nodejs_version][distribution].url }}"
    nodejs_hash: "{{ urls[nodejs_version][distribution].hash }}"
    nodejs_filename: "{{ urls[nodejs_version][distribution].file }}"

- set_fact:
    nodejs_home: "{{ prefix }}/{{ nodejs_dir }}"
    nodejs_archive_temp_path: "{{ tmp_dir }}/{{ nodejs_filename }}"
    nodejs_archive_download_path: "{{ download_dir }}/{{ nodejs_filename }}"
    nodejs_temp_path: "{{ tmp_dir }}/{{ nodejs_dir }}"

- name: "Create Directories"
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ tmp_dir }}"
    - "{{ nodejs_home }}"

- name: "Install GCC C++"
  yum:
    name: "gcc-c++"
    state: present

- name: "Create Download Directory on control server: {{ download_dir }}"
  delegate_to: 127.0.0.1
  file:
    path: "{{ download_dir }}"
    state: directory

- name: "Download Node.js archive to control server Download Path: {{ nodejs_archive_download_path }}"
  delegate_to: 127.0.0.1
  get_url:
    url: "{{ nodejs_url }}"
    dest: "{{ nodejs_archive_download_path }}"
    checksum: "sha256:{{ nodejs_hash }}"

- name: "Copy Node.js archive to Temporary Path: {{ nodejs_archive_temp_path }}"
  copy:
    src: "{{ nodejs_archive_download_path }}"
    dest: "{{ nodejs_archive_temp_path }}"

- name: "Extract Node.js archive to Directory: {{ prefix }}"
  unarchive:
    src: "{{ nodejs_archive_temp_path }}"
    dest: "{{ prefix }}"
    remote_src: yes
  when: not compile

- name: "Extract Node.js archive to Directory: {{ tmp_dir }}"
  unarchive:
    src: "{{ nodejs_archive_temp_path }}"
    dest: "{{ tmp_dir }}"
    remote_src: yes
  when: compile

- name: "Compile Node.js"
  shell: "./configure  --prefix {{ nodejs_home }}"
  args:
    chdir: "{{ nodejs_temp_path }}"
  when: compile

- shell: "make"
  args:
    chdir: "{{ nodejs_temp_path }}"
  when: compile

- shell: "make install"
  args:
    chdir: "{{ nodejs_temp_path }}"
  when: compile

- name: "Install Node.js environment variables"
  template:
    src: "nodejs.sh.j2"
    dest: "/etc/profile.d/nodejs.sh"
    mode: 0644

- name: "Upgrade NPM"
  shell: "source /etc/profile.d/nodejs.sh && npm install -g npm"

- name: "Clean Temporary files"
  file:
    path: "{{ tmp_prefix }}"
    state: absent

- name: "Fix Permissions"
  shell: "{{ item }}"
  args:
    chdir: "{{ prefix }}"
  with_items:
    - "chown -R root:root ."
    - "find . -perm -u+r -exec chmod a+r {} \\;"
    - "find . -perm -u+w -exec chmod a+w {} \\;"
    - "find . -perm -u+x -exec chmod a+x {} \\;"

