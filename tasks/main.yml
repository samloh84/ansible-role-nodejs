- set_fact:
    distribution: "{% if compile %}source{% else %}binaries{% endif %}"
    download_dir: "{{ role_path }}/files"
    temp_dir: "{{ tmp_prefix }}/nodejs-{{ nodejs_version }}"

- set_fact:
    nodejs_dir: "{{ urls[nodejs_version][distribution].dir }}"
    nodejs_url: "{{ urls[nodejs_version][distribution].url }}"
    nodejs_hash: "{{ urls[nodejs_version][distribution].hash }}"
    nodejs_filename: "{{ urls[nodejs_version][distribution].file }}"

- set_fact:
    nodejs_home: "{{ prefix }}/{{ nodejs_dir }}"
    nodejs_archive_temp_path: "{{ temp_dir }}/{{ nodejs_filename }}"
    nodejs_archive_download_path: "{{ download_dir }}/{{ nodejs_filename }}"
    nodejs_temp_path: "{{ temp_dir }}/{{ nodejs_dir }}"

- name: "Create Temporary Directory {{ temp_dir }}"
  file:
    path: "{{ temp_dir }}"
    state: directory

- name: "Create Node.js Directory {{ nodejs_home }}"
  file:
    path: "{{ nodejs_home }}"
    state: directory

- name: "Install GCC C++"
  yum:
    name: "gcc-c++"
    state: present

- name: "Create Download Directory on control server: {{ download_dir }}"
  delegate_to: 127.0.0.1
  file:
    path: "{{ download_dir }}"
    state: directory


- name: "Download Node.js archive to control server Download Path: {{ nodejs_archive_download_path }}"
  delegate_to: 127.0.0.1
  get_url:
    url: "{{ nodejs_url }}"
    dest: "{{ nodejs_archive_download_path }}"
    checksum: "sha256:{{ nodejs_hash }}"

- name: "Copy Node.js archive to Temporary Path: {{ nodejs_archive_temp_path }}"
  copy:
    src: "{{ nodejs_archive_download_path }}"
    dest: "{{ nodejs_archive_temp_path }}"

- name: "Extract Node.js archive to Directory: {{ prefix }}"
  unarchive:
    src: "{{ nodejs_archive_temp_path }}"
    dest: "{{ prefix }}"
    remote_src: yes
  when: not compile

- name: "Extract Node.js archive to Directory: {{ temp_dir }}"
  unarchive:
    src: "{{ nodejs_archive_temp_path }}"
    dest: "{{ temp_dir }}"
    remote_src: yes
  when: compile

- name: "Compile Node.js"
  shell: "./configure  --prefix {{ nodejs_home }}"
  args:
    chdir: "{{ nodejs_temp_path }}"
  when: compile

- shell: "make"
  args:
    chdir: "{{ nodejs_temp_path }}"
  when: compile

- shell: "make install"
  args:
    chdir: "{{ nodejs_temp_path }}"
  when: compile

- name: "Install Node.js environment variables"
  template:
    src: "templates/nodejs.sh.j2"
    dest: "/etc/profile.d/nodejs.sh"

- name: "Clean Temporary files"
  file:
    path: "{{ tmp_prefix }}"
    state: absent
